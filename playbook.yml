---
- hosts: 127.0.0.1
  connection: local
  tasks:
  - name: Copy all configs to user home directory
    synchronize:
      src: configs/
      dest: "~"
      owner: no
  - name: install autoconf
    package:
      name: autoconf
      state: present
    become: true
    become_method: sudo
    become_user: root
    become_flags: '-H'
  - name: install automake
    package:
      name: automake
      state: present
    become: true
    become_method: sudo
    become_user: root
    become_flags: '-H'
  - name: install cvs
    package:
      name: cvs
      state: present
    become: true
    become_method: sudo
    become_user: root
    become_flags: '-H'
  - name: install libtool
    package:
      name: libtool
      state: present
    become: true
    become_method: sudo
    become_user: root
    become_flags: '-H'
  - name: install libxcb
    package:
      name: libxcb
      state: present
    become: true
    become_method: sudo
    become_user: root
    become_flags: '-H'
  - name: install xorg-macros
    package:
      name: xorg-macros
      state: present
    become: true
    become_method: sudo
    become_user: root
    become_flags: '-H'
  - name: install xcb-util
    package:
      name: xcb-util
      state: present
    become: true
    become_method: sudo
    become_user: root
    become_flags: '-H'
  - name: install gcc-7
    package:
      name: gcc-7
      state: present
    become: true
    become_method: sudo
    become_user: root
    become_flags: '-H'
  - name: install ruby
    package:
      name: ruby
      state: present
    become: true
    become_method: sudo
    become_user: root
    become_flags: '-H'
  - name: install cmake
    package:
      name: cmake
      state: present
    become: true
    become_method: sudo
    become_user: root
    become_flags: '-H'
  - name: install doxygen
    package:
      name: doxygen
      state: present
    become: true
    become_method: sudo
    become_user: root
    become_flags: '-H'

  # Import gnome-terminal profiles
  - name: Import gnome-terminal profiles
    shell: dconf load /org/gnome/terminal/legacy/profiles:/ < "{{playbook_dir}}/import/gnome-terminal-profiles.dconf"
 
  # BUILD libev from source, if its not installed
  - stat:
      path: /opt/libev
    register: libev_dir
  - debug:
      msg: "libev is build and installed already"
    when: libev_dir.stat.isdir is defined and libev_dir.stat.isdir
  - name: clean build dir for libev
    file: path=/tmp/libev state=absent
    when: not libev_dir.stat.exists
  - name: build libev from source
    shell: cd /tmp && cvs -z3 -d :pserver:anonymous@cvs.schmorp.de/schmorpforge co libev && cd /tmp/libev && patch -p0 < "{{playbook_dir}}/patches/libev/patch.diff" && PATH="/usr/gnu/bin:$PATH" libtoolize --force && aclocal && PATH="/usr/gnu/bin:$PATH" autoheader && PATH="/usr/gnu/bin:$PATH" automake --force-missing --add-missing && autoconf && PATH="/usr/gnu/bin:$PATH" ./configure --prefix /opt/libev && PATH="/usr/gnu/bin:$PATH" make && PATH="/usr/gnu/bin:$PATH" sudo -H make install
    when: not libev_dir.stat.exists

  # BUILD xcb-util-xrm from source, if its not installed
  - stat:
      path: /opt/xcb-util-xrm
    register: xcb_util_xrm_dir
  - debug:
      msg: "xcb-util-xrm is build and installed already"
    when: xcb_util_xrm_dir.stat.isdir is defined and xcb_util_xrm_dir.stat.isdir
  - name: clean build dir for xcb-util-xrm
    file: path=/tmp/xcb-util-xrm state=absent
    when: not xcb_util_xrm_dir.stat.exists
  - name: build xcb-util-xrm
    shell: cd /tmp && git clone --recursive https://github.com/Airblader/xcb-util-xrm.git && cd /tmp/xcb-util-xrm && git submodule update --init && PATH="/usr/gnu/bin/:$PATH" ./autogen.sh --prefix=/opt/xcb-util-xrm && PATH="/usr/gnu/bin/:$PATH" make && PATH="/usr/gnu/bin/:$PATH" sudo -H make install
    when: not xcb_util_xrm_dir.stat.exists

  # BUILD yajl from source, if its not installed
  - stat:
      path: /opt/yajl
    register: yajl_dir
  - debug:
      msg: "yajl is build and installed already"
    when: yajl_dir.stat.isdir is defined and yajl_dir.stat.isdir
  - name: clean build dir for yajl
    file: path=/tmp/yajl state=absent
    when: not yajl_dir.stat.exists
  - name: build yajl
    shell: cd /tmp && git clone https://github.com/lloyd/yajl.git && cd yajl && git checkout 1.x && ./configure --prefix=/opt/yajl && make && sudo -H make install
    when: not yajl_dir.stat.exists

  # BUILD i3-gaps from source, if its not installed
  - stat:
      path: /opt/i3-gaps
    register: i3_gaps_dir
  - debug:
      msg: "i3-gaps is build and installed already"
    when: i3_gaps_dir.stat.isdir is defined and i3_gaps_dir.stat.isdir
  - name: clean build dir for i3-gaps
    file: path=/tmp/i3-gaps state=absent
    when: not i3_gaps_dir.stat.exists
  - name: install i3-gaps
    shell: cd /tmp && git clone https://www.github.com/Airblader/i3 i3-gaps && cd /tmp/i3-gaps && autoreconf --force --install && rm -rf build/ && mkdir -p build && cd build/ && YAJL_CFLAGS='-I/opt/yajl/include' YAJL_LIBS='-L/opt/yajl/lib' XCB_UTIL_XRM_CFLAGS='-I/opt/xcb-util-xrm/include' XCB_UTIL_XRM_LIBS='-L/opt/xcb-util-xrm/lib' CFLAGS='-I/opt/libev/include' LDFLAGS='-L/opt/libev/lib' PATH="/usr/gnu/bin:$PATH" ../configure --prefix=/opt/i3-gaps --sysconfdir=/etc --disable-sanitizers --disable-debug --enable-docs --enable-mans && PATH="/usr/gnu/bin:$PATH" make -j8 && PATH="/usr/gnu/bin:$PATH" sudo -H make install
